<Page x:Class="Aldeo.View.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:view="using:Aldeo.View"
      xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
      DataContext="{Binding Main, Source={StaticResource Locator}}"
      mc:Ignorable="d">

    <Page.Resources>
        <DataTemplate x:Key="MenuTemplate">
            <Grid VerticalAlignment="Stretch">
                <view:MenuTile Margin="5" />
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <interactivity:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </core:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--<TextBlock FontSize="50" Text="{Binding Message}" />-->
        <view:Header Title="Aldeo" />


        <!--ItemHeight="{Binding ItemHeight.Value}"-->
        <!--DesiredWidth="{Binding DesiredWidth.Value}"-->
        <!--SelectionMode="{Binding SelectionMode.Value,Mode=TwoWay}"-->

        <controls:AdaptiveGridView
          Grid.Row="1"
          x:Name="MenuView"
            IsItemClickEnabled="True"  
          ItemTemplate="{StaticResource MenuTemplate}"
                  ItemsSource="{Binding Menu}">
            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="SelectionChanged">
                    <core:InvokeCommandAction Command="{Binding ChangedSelection}" CommandParameter="{Binding SelectedItem, ElementName=MenuView}" />
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
        </controls:AdaptiveGridView>

        <!--<GridView x:Name="MenuView"
                  Grid.Row="1"
                  Margin="15"
                  HorizontalContentAlignment="Stretch"
                  VerticalContentAlignment="Stretch"
                  IsItemClickEnabled="True"
                  ItemsSource="{Binding Menu}">


                <GridView.ItemTemplate>
                    <DataTemplate>
                        <Grid VerticalAlignment="Stretch">
                            <view:MenuTile Margin="5" />
                        </Grid>
                    </DataTemplate>
                </GridView.ItemTemplate>-->



        <!--<GridView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapGrid Orientation="Horizontal" VerticalChildrenAlignment="Stretch"/>
                </ItemsPanelTemplate>-->

        <!--<GridView.ItemsPanel>

                <ItemsPanelTemplate>
                    <WrapGrid />
            -->
        <!--  Orientation=&quot;Horizontal&quot;/&gt;  -->

        <!--</ItemsPanelTemplate>-->

        <!--</GridView.ItemsPanel>-->

        <!--<StackPanel x:Name="myPanel" Orientation="Vertical">
                <TextBlock Text="This is a block of text. It is text block 1. "
                 Style="{ThemeResource BodyTextBlockStyle}"/>
                <TextBlock Text="This is a block of text. It is text block 2. "
                 Style="{ThemeResource BodyTextBlockStyle}"/>
                <TextBlock Text="This is a block of text. It is text block 3. "
                 Style="{ThemeResource BodyTextBlockStyle}"/>
            </StackPanel>-->

        <!--</GridView>-->
        <CommandBar Grid.Row="1" VerticalAlignment="Bottom">
            <!--<AppBarToggleButton Icon="Shuffle" Label="Shuffle" Click="AppBarButton_Click" />
            <AppBarToggleButton Icon="RepeatAll" Label="Repeat" Click="AppBarButton_Click"/>
            <AppBarSeparator/>-->
            <!--<AppBarButton Icon="Forward" Label="Forward">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <core:InvokeCommandAction Command="{Binding ClickedAccount}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AppBarButton>-->

            <CommandBar.SecondaryCommands>
                <AppBarButton Icon="Like" Label="Like" />
                <AppBarButton Icon="Dislike" Label="Dislike" />
            </CommandBar.SecondaryCommands>

            <!--<CommandBar.Content>
                <TextBlock Margin="12,14" Text="Now playing..." />
            </CommandBar.Content>-->
        </CommandBar>

        <!--<VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
        -->
        <!--<VisualState.StateTriggers>
        -->
        <!--
            VisualState to be triggered when window
            width is >=720 effective pixels.
        -->
        <!--
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>-->
        <!--
                    <VisualState.Setters>
                        <Setter Target="myPanel.Orientation" Value="Horizontal" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>-->
        <view:Bot Grid.Row="2" HorizontalAlignment="Stretch" MaxWidth="720" VerticalAlignment="Bottom">

        </view:Bot>

    </Grid>

</Page>